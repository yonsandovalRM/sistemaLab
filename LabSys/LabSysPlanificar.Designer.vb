'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.5446
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("LabSysPlanificar"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class LabSysPlanificar
    Inherits Global.System.Data.DataSet
    
    Private tablels_ObtieneDatosPlanificacion As ls_ObtieneDatosPlanificacionDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("ls_ObtieneDatosPlanificacion")) Is Nothing) Then
                MyBase.Tables.Add(New ls_ObtieneDatosPlanificacionDataTable(ds.Tables("ls_ObtieneDatosPlanificacion")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ls_ObtieneDatosPlanificacion() As ls_ObtieneDatosPlanificacionDataTable
        Get
            Return Me.tablels_ObtieneDatosPlanificacion
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As LabSysPlanificar = CType(MyBase.Clone,LabSysPlanificar)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("ls_ObtieneDatosPlanificacion")) Is Nothing) Then
                MyBase.Tables.Add(New ls_ObtieneDatosPlanificacionDataTable(ds.Tables("ls_ObtieneDatosPlanificacion")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tablels_ObtieneDatosPlanificacion = CType(MyBase.Tables("ls_ObtieneDatosPlanificacion"),ls_ObtieneDatosPlanificacionDataTable)
        If (initTable = true) Then
            If (Not (Me.tablels_ObtieneDatosPlanificacion) Is Nothing) Then
                Me.tablels_ObtieneDatosPlanificacion.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "LabSysPlanificar"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/LabSysPlanificar.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tablels_ObtieneDatosPlanificacion = New ls_ObtieneDatosPlanificacionDataTable
        MyBase.Tables.Add(Me.tablels_ObtieneDatosPlanificacion)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializels_ObtieneDatosPlanificacion() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As LabSysPlanificar = New LabSysPlanificar
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub ls_ObtieneDatosPlanificacionRowChangeEventHandler(ByVal sender As Object, ByVal e As ls_ObtieneDatosPlanificacionRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ls_ObtieneDatosPlanificacionDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnOT_NUMERO As Global.System.Data.DataColumn
        
        Private columnOT_FECHA_ORDEN As Global.System.Data.DataColumn
        
        Private columnPRO_PRODUCTOR As Global.System.Data.DataColumn
        
        Private columnOT_LOCALIDAD As Global.System.Data.DataColumn
        
        Private columnOT_DESP_URGENTE As Global.System.Data.DataColumn
        
        Private columnOTC_CANT_MUESTRAS As Global.System.Data.DataColumn
        
        Private columnOTC_NLAB_DESDE As Global.System.Data.DataColumn
        
        Private columnOTC_NLAB_HASTA As Global.System.Data.DataColumn
        
        Private columnANA_CODIGO As Global.System.Data.DataColumn
        
        Private columnANA_ANALISIS As Global.System.Data.DataColumn
        
        Private columnOT_EMPRESA As Global.System.Data.DataColumn
        
        Private columnOT_REMITE As Global.System.Data.DataColumn
        
        Private columnOT_DESP_FECHA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ls_ObtieneDatosPlanificacion"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OT_NUMEROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOT_NUMERO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OT_FECHA_ORDENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOT_FECHA_ORDEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PRO_PRODUCTORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRO_PRODUCTOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OT_LOCALIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOT_LOCALIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OT_DESP_URGENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOT_DESP_URGENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OTC_CANT_MUESTRASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTC_CANT_MUESTRAS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OTC_NLAB_DESDEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTC_NLAB_DESDE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OTC_NLAB_HASTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTC_NLAB_HASTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ANA_CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnANA_CODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ANA_ANALISISColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnANA_ANALISIS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OT_EMPRESAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOT_EMPRESA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OT_REMITEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOT_REMITE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OT_DESP_FECHAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOT_DESP_FECHA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ls_ObtieneDatosPlanificacionRow
            Get
                Return CType(Me.Rows(index),ls_ObtieneDatosPlanificacionRow)
            End Get
        End Property
        
        Public Event ls_ObtieneDatosPlanificacionRowChanging As ls_ObtieneDatosPlanificacionRowChangeEventHandler
        
        Public Event ls_ObtieneDatosPlanificacionRowChanged As ls_ObtieneDatosPlanificacionRowChangeEventHandler
        
        Public Event ls_ObtieneDatosPlanificacionRowDeleting As ls_ObtieneDatosPlanificacionRowChangeEventHandler
        
        Public Event ls_ObtieneDatosPlanificacionRowDeleted As ls_ObtieneDatosPlanificacionRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addls_ObtieneDatosPlanificacionRow(ByVal row As ls_ObtieneDatosPlanificacionRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addls_ObtieneDatosPlanificacionRow(ByVal OT_NUMERO As Integer, ByVal OT_FECHA_ORDEN As String, ByVal PRO_PRODUCTOR As String, ByVal OT_LOCALIDAD As String, ByVal OT_DESP_URGENTE As Boolean, ByVal OTC_CANT_MUESTRAS As Integer, ByVal OTC_NLAB_DESDE As Integer, ByVal OTC_NLAB_HASTA As Integer, ByVal ANA_CODIGO As Double, ByVal ANA_ANALISIS As String, ByVal OT_EMPRESA As String, ByVal OT_REMITE As String, ByVal OT_DESP_FECHA As String) As ls_ObtieneDatosPlanificacionRow
            Dim rowls_ObtieneDatosPlanificacionRow As ls_ObtieneDatosPlanificacionRow = CType(Me.NewRow,ls_ObtieneDatosPlanificacionRow)
            Dim columnValuesArray() As Object = New Object() {OT_NUMERO, OT_FECHA_ORDEN, PRO_PRODUCTOR, OT_LOCALIDAD, OT_DESP_URGENTE, OTC_CANT_MUESTRAS, OTC_NLAB_DESDE, OTC_NLAB_HASTA, ANA_CODIGO, ANA_ANALISIS, OT_EMPRESA, OT_REMITE, OT_DESP_FECHA}
            rowls_ObtieneDatosPlanificacionRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowls_ObtieneDatosPlanificacionRow)
            Return rowls_ObtieneDatosPlanificacionRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ls_ObtieneDatosPlanificacionDataTable = CType(MyBase.Clone,ls_ObtieneDatosPlanificacionDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ls_ObtieneDatosPlanificacionDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnOT_NUMERO = MyBase.Columns("OT_NUMERO")
            Me.columnOT_FECHA_ORDEN = MyBase.Columns("OT_FECHA_ORDEN")
            Me.columnPRO_PRODUCTOR = MyBase.Columns("PRO_PRODUCTOR")
            Me.columnOT_LOCALIDAD = MyBase.Columns("OT_LOCALIDAD")
            Me.columnOT_DESP_URGENTE = MyBase.Columns("OT_DESP_URGENTE")
            Me.columnOTC_CANT_MUESTRAS = MyBase.Columns("OTC_CANT_MUESTRAS")
            Me.columnOTC_NLAB_DESDE = MyBase.Columns("OTC_NLAB_DESDE")
            Me.columnOTC_NLAB_HASTA = MyBase.Columns("OTC_NLAB_HASTA")
            Me.columnANA_CODIGO = MyBase.Columns("ANA_CODIGO")
            Me.columnANA_ANALISIS = MyBase.Columns("ANA_ANALISIS")
            Me.columnOT_EMPRESA = MyBase.Columns("OT_EMPRESA")
            Me.columnOT_REMITE = MyBase.Columns("OT_REMITE")
            Me.columnOT_DESP_FECHA = MyBase.Columns("OT_DESP_FECHA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnOT_NUMERO = New Global.System.Data.DataColumn("OT_NUMERO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOT_NUMERO)
            Me.columnOT_FECHA_ORDEN = New Global.System.Data.DataColumn("OT_FECHA_ORDEN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOT_FECHA_ORDEN)
            Me.columnPRO_PRODUCTOR = New Global.System.Data.DataColumn("PRO_PRODUCTOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRO_PRODUCTOR)
            Me.columnOT_LOCALIDAD = New Global.System.Data.DataColumn("OT_LOCALIDAD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOT_LOCALIDAD)
            Me.columnOT_DESP_URGENTE = New Global.System.Data.DataColumn("OT_DESP_URGENTE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOT_DESP_URGENTE)
            Me.columnOTC_CANT_MUESTRAS = New Global.System.Data.DataColumn("OTC_CANT_MUESTRAS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTC_CANT_MUESTRAS)
            Me.columnOTC_NLAB_DESDE = New Global.System.Data.DataColumn("OTC_NLAB_DESDE", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTC_NLAB_DESDE)
            Me.columnOTC_NLAB_HASTA = New Global.System.Data.DataColumn("OTC_NLAB_HASTA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTC_NLAB_HASTA)
            Me.columnANA_CODIGO = New Global.System.Data.DataColumn("ANA_CODIGO", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANA_CODIGO)
            Me.columnANA_ANALISIS = New Global.System.Data.DataColumn("ANA_ANALISIS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANA_ANALISIS)
            Me.columnOT_EMPRESA = New Global.System.Data.DataColumn("OT_EMPRESA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOT_EMPRESA)
            Me.columnOT_REMITE = New Global.System.Data.DataColumn("OT_REMITE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOT_REMITE)
            Me.columnOT_DESP_FECHA = New Global.System.Data.DataColumn("OT_DESP_FECHA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOT_DESP_FECHA)
            Me.columnOT_NUMERO.AllowDBNull = false
            Me.columnOT_FECHA_ORDEN.ReadOnly = true
            Me.columnOT_FECHA_ORDEN.MaxLength = 10
            Me.columnPRO_PRODUCTOR.MaxLength = 40
            Me.columnOT_LOCALIDAD.MaxLength = 25
            Me.columnOTC_NLAB_DESDE.AllowDBNull = false
            Me.columnANA_CODIGO.AllowDBNull = false
            Me.columnANA_ANALISIS.MaxLength = 2147483647
            Me.columnOT_EMPRESA.MaxLength = 25
            Me.columnOT_REMITE.MaxLength = 35
            Me.columnOT_DESP_FECHA.ReadOnly = true
            Me.columnOT_DESP_FECHA.MaxLength = 10
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newls_ObtieneDatosPlanificacionRow() As ls_ObtieneDatosPlanificacionRow
            Return CType(Me.NewRow,ls_ObtieneDatosPlanificacionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ls_ObtieneDatosPlanificacionRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ls_ObtieneDatosPlanificacionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ls_ObtieneDatosPlanificacionRowChangedEvent) Is Nothing) Then
                RaiseEvent ls_ObtieneDatosPlanificacionRowChanged(Me, New ls_ObtieneDatosPlanificacionRowChangeEvent(CType(e.Row,ls_ObtieneDatosPlanificacionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ls_ObtieneDatosPlanificacionRowChangingEvent) Is Nothing) Then
                RaiseEvent ls_ObtieneDatosPlanificacionRowChanging(Me, New ls_ObtieneDatosPlanificacionRowChangeEvent(CType(e.Row,ls_ObtieneDatosPlanificacionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ls_ObtieneDatosPlanificacionRowDeletedEvent) Is Nothing) Then
                RaiseEvent ls_ObtieneDatosPlanificacionRowDeleted(Me, New ls_ObtieneDatosPlanificacionRowChangeEvent(CType(e.Row,ls_ObtieneDatosPlanificacionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ls_ObtieneDatosPlanificacionRowDeletingEvent) Is Nothing) Then
                RaiseEvent ls_ObtieneDatosPlanificacionRowDeleting(Me, New ls_ObtieneDatosPlanificacionRowChangeEvent(CType(e.Row,ls_ObtieneDatosPlanificacionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removels_ObtieneDatosPlanificacionRow(ByVal row As ls_ObtieneDatosPlanificacionRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As LabSysPlanificar = New LabSysPlanificar
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ls_ObtieneDatosPlanificacionDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class ls_ObtieneDatosPlanificacionRow
        Inherits Global.System.Data.DataRow
        
        Private tablels_ObtieneDatosPlanificacion As ls_ObtieneDatosPlanificacionDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablels_ObtieneDatosPlanificacion = CType(Me.Table,ls_ObtieneDatosPlanificacionDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OT_NUMERO() As Integer
            Get
                Return CType(Me(Me.tablels_ObtieneDatosPlanificacion.OT_NUMEROColumn),Integer)
            End Get
            Set
                Me(Me.tablels_ObtieneDatosPlanificacion.OT_NUMEROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OT_FECHA_ORDEN() As String
            Get
                Try 
                    Return CType(Me(Me.tablels_ObtieneDatosPlanificacion.OT_FECHA_ORDENColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'OT_FECHA_ORDEN' de la tabla 'ls_ObtieneDatosPlanificacion"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablels_ObtieneDatosPlanificacion.OT_FECHA_ORDENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PRO_PRODUCTOR() As String
            Get
                Try 
                    Return CType(Me(Me.tablels_ObtieneDatosPlanificacion.PRO_PRODUCTORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PRO_PRODUCTOR' de la tabla 'ls_ObtieneDatosPlanificacion'"& _ 
                            " es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablels_ObtieneDatosPlanificacion.PRO_PRODUCTORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OT_LOCALIDAD() As String
            Get
                Try 
                    Return CType(Me(Me.tablels_ObtieneDatosPlanificacion.OT_LOCALIDADColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'OT_LOCALIDAD' de la tabla 'ls_ObtieneDatosPlanificacion' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablels_ObtieneDatosPlanificacion.OT_LOCALIDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OT_DESP_URGENTE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablels_ObtieneDatosPlanificacion.OT_DESP_URGENTEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'OT_DESP_URGENTE' de la tabla 'ls_ObtieneDatosPlanificacio"& _ 
                            "n' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablels_ObtieneDatosPlanificacion.OT_DESP_URGENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OTC_CANT_MUESTRAS() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablels_ObtieneDatosPlanificacion.OTC_CANT_MUESTRASColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'OTC_CANT_MUESTRAS' de la tabla 'ls_ObtieneDatosPlanificac"& _ 
                            "ion' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablels_ObtieneDatosPlanificacion.OTC_CANT_MUESTRASColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OTC_NLAB_DESDE() As Integer
            Get
                Return CType(Me(Me.tablels_ObtieneDatosPlanificacion.OTC_NLAB_DESDEColumn),Integer)
            End Get
            Set
                Me(Me.tablels_ObtieneDatosPlanificacion.OTC_NLAB_DESDEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OTC_NLAB_HASTA() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablels_ObtieneDatosPlanificacion.OTC_NLAB_HASTAColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'OTC_NLAB_HASTA' de la tabla 'ls_ObtieneDatosPlanificacion"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablels_ObtieneDatosPlanificacion.OTC_NLAB_HASTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ANA_CODIGO() As Double
            Get
                Return CType(Me(Me.tablels_ObtieneDatosPlanificacion.ANA_CODIGOColumn),Double)
            End Get
            Set
                Me(Me.tablels_ObtieneDatosPlanificacion.ANA_CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ANA_ANALISIS() As String
            Get
                Try 
                    Return CType(Me(Me.tablels_ObtieneDatosPlanificacion.ANA_ANALISISColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ANA_ANALISIS' de la tabla 'ls_ObtieneDatosPlanificacion' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablels_ObtieneDatosPlanificacion.ANA_ANALISISColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OT_EMPRESA() As String
            Get
                Try 
                    Return CType(Me(Me.tablels_ObtieneDatosPlanificacion.OT_EMPRESAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'OT_EMPRESA' de la tabla 'ls_ObtieneDatosPlanificacion' es"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablels_ObtieneDatosPlanificacion.OT_EMPRESAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OT_REMITE() As String
            Get
                Try 
                    Return CType(Me(Me.tablels_ObtieneDatosPlanificacion.OT_REMITEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'OT_REMITE' de la tabla 'ls_ObtieneDatosPlanificacion' es "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablels_ObtieneDatosPlanificacion.OT_REMITEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OT_DESP_FECHA() As String
            Get
                Try 
                    Return CType(Me(Me.tablels_ObtieneDatosPlanificacion.OT_DESP_FECHAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'OT_DESP_FECHA' de la tabla 'ls_ObtieneDatosPlanificacion'"& _ 
                            " es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablels_ObtieneDatosPlanificacion.OT_DESP_FECHAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOT_FECHA_ORDENNull() As Boolean
            Return Me.IsNull(Me.tablels_ObtieneDatosPlanificacion.OT_FECHA_ORDENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOT_FECHA_ORDENNull()
            Me(Me.tablels_ObtieneDatosPlanificacion.OT_FECHA_ORDENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPRO_PRODUCTORNull() As Boolean
            Return Me.IsNull(Me.tablels_ObtieneDatosPlanificacion.PRO_PRODUCTORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPRO_PRODUCTORNull()
            Me(Me.tablels_ObtieneDatosPlanificacion.PRO_PRODUCTORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOT_LOCALIDADNull() As Boolean
            Return Me.IsNull(Me.tablels_ObtieneDatosPlanificacion.OT_LOCALIDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOT_LOCALIDADNull()
            Me(Me.tablels_ObtieneDatosPlanificacion.OT_LOCALIDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOT_DESP_URGENTENull() As Boolean
            Return Me.IsNull(Me.tablels_ObtieneDatosPlanificacion.OT_DESP_URGENTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOT_DESP_URGENTENull()
            Me(Me.tablels_ObtieneDatosPlanificacion.OT_DESP_URGENTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOTC_CANT_MUESTRASNull() As Boolean
            Return Me.IsNull(Me.tablels_ObtieneDatosPlanificacion.OTC_CANT_MUESTRASColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOTC_CANT_MUESTRASNull()
            Me(Me.tablels_ObtieneDatosPlanificacion.OTC_CANT_MUESTRASColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOTC_NLAB_HASTANull() As Boolean
            Return Me.IsNull(Me.tablels_ObtieneDatosPlanificacion.OTC_NLAB_HASTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOTC_NLAB_HASTANull()
            Me(Me.tablels_ObtieneDatosPlanificacion.OTC_NLAB_HASTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsANA_ANALISISNull() As Boolean
            Return Me.IsNull(Me.tablels_ObtieneDatosPlanificacion.ANA_ANALISISColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetANA_ANALISISNull()
            Me(Me.tablels_ObtieneDatosPlanificacion.ANA_ANALISISColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOT_EMPRESANull() As Boolean
            Return Me.IsNull(Me.tablels_ObtieneDatosPlanificacion.OT_EMPRESAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOT_EMPRESANull()
            Me(Me.tablels_ObtieneDatosPlanificacion.OT_EMPRESAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOT_REMITENull() As Boolean
            Return Me.IsNull(Me.tablels_ObtieneDatosPlanificacion.OT_REMITEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOT_REMITENull()
            Me(Me.tablels_ObtieneDatosPlanificacion.OT_REMITEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOT_DESP_FECHANull() As Boolean
            Return Me.IsNull(Me.tablels_ObtieneDatosPlanificacion.OT_DESP_FECHAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOT_DESP_FECHANull()
            Me(Me.tablels_ObtieneDatosPlanificacion.OT_DESP_FECHAColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class ls_ObtieneDatosPlanificacionRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ls_ObtieneDatosPlanificacionRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As ls_ObtieneDatosPlanificacionRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As ls_ObtieneDatosPlanificacionRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace LabSysPlanificarTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ls_ObtieneDatosPlanificacionTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ls_ObtieneDatosPlanificacion"
            tableMapping.ColumnMappings.Add("OT_NUMERO", "OT_NUMERO")
            tableMapping.ColumnMappings.Add("OT_FECHA_ORDEN", "OT_FECHA_ORDEN")
            tableMapping.ColumnMappings.Add("PRO_PRODUCTOR", "PRO_PRODUCTOR")
            tableMapping.ColumnMappings.Add("OT_LOCALIDAD", "OT_LOCALIDAD")
            tableMapping.ColumnMappings.Add("OT_DESP_URGENTE", "OT_DESP_URGENTE")
            tableMapping.ColumnMappings.Add("OTC_CANT_MUESTRAS", "OTC_CANT_MUESTRAS")
            tableMapping.ColumnMappings.Add("OTC_NLAB_DESDE", "OTC_NLAB_DESDE")
            tableMapping.ColumnMappings.Add("OTC_NLAB_HASTA", "OTC_NLAB_HASTA")
            tableMapping.ColumnMappings.Add("ANA_CODIGO", "ANA_CODIGO")
            tableMapping.ColumnMappings.Add("ANA_ANALISIS", "ANA_ANALISIS")
            tableMapping.ColumnMappings.Add("OT_EMPRESA", "OT_EMPRESA")
            tableMapping.ColumnMappings.Add("OT_REMITE", "OT_REMITE")
            tableMapping.ColumnMappings.Add("OT_DESP_FECHA", "OT_DESP_FECHA")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.LabSys.My.MySettings.Default.LabSysConnectionString1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.ls_ObtieneDatosPlanificacion"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Not", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Productor", Global.System.Data.SqlDbType.VarChar, 200, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CodAnalisis", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Analisis", Global.System.Data.SqlDbType.VarChar, 250, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@foliar", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@agua", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@suelo", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@otros", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@fDesde", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@fHasta", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@urgente", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As LabSysPlanificar.ls_ObtieneDatosPlanificacionDataTable, ByVal _Not As String, ByVal Productor As String, ByVal CodAnalisis As String, ByVal Analisis As String, ByVal foliar As String, ByVal agua As String, ByVal suelo As String, ByVal otros As String, ByVal fDesde As String, ByVal fHasta As String, ByVal urgente As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (_Not Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(_Not,String)
            End If
            If (Productor Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Productor,String)
            End If
            If (CodAnalisis Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(CodAnalisis,String)
            End If
            If (Analisis Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Analisis,String)
            End If
            If (foliar Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(foliar,String)
            End If
            If (agua Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(agua,String)
            End If
            If (suelo Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(suelo,String)
            End If
            If (otros Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(otros,String)
            End If
            If (fDesde Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(fDesde,String)
            End If
            If (fHasta Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(fHasta,String)
            End If
            If (urgente Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(urgente,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal _Not As String, ByVal Productor As String, ByVal CodAnalisis As String, ByVal Analisis As String, ByVal foliar As String, ByVal agua As String, ByVal suelo As String, ByVal otros As String, ByVal fDesde As String, ByVal fHasta As String, ByVal urgente As String) As LabSysPlanificar.ls_ObtieneDatosPlanificacionDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (_Not Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(_Not,String)
            End If
            If (Productor Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Productor,String)
            End If
            If (CodAnalisis Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(CodAnalisis,String)
            End If
            If (Analisis Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Analisis,String)
            End If
            If (foliar Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(foliar,String)
            End If
            If (agua Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(agua,String)
            End If
            If (suelo Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(suelo,String)
            End If
            If (otros Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(otros,String)
            End If
            If (fDesde Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(fDesde,String)
            End If
            If (fHasta Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(fHasta,String)
            End If
            If (urgente Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(urgente,String)
            End If
            Dim dataTable As LabSysPlanificar.ls_ObtieneDatosPlanificacionDataTable = New LabSysPlanificar.ls_ObtieneDatosPlanificacionDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
End Namespace
